<?php

/**
 * @file
 * Lazyload images.
 */

use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements theme_preprocess_HOOK().
 *
 * If a responsive image has the class 'js-lazyload-image' then create a
 * thumbnail to be shown until the image itself is lazy loaded.
 */
function lazyload_images_preprocess_responsive_image(&$variables) {
  if (isset($variables['img_element'], $variables['img_element']['#attributes'], $variables['img_element']['#attributes']['class']) && is_string($variables['img_element']['#attributes']['class']) && strpos($variables['img_element']['#attributes']['class'], 'js-lazyload-image') !== FALSE) {
    // Set data-src attribute to the desired image.
    $variables['img_element']['#attributes']['data-src'] = $variables['img_element']['#uri'];
    // Create a smaller sized thumbnail that will be shown during lazy loading.
    $style = \Drupal::entityTypeManager()->getStorage('image_style')->load('thumbnail');
    $url = $style->buildUrl($variables['uri']);
    $variables['img_element']['#uri'] = $url;
    // For each picture element set srcset attribute to data-srcset attribute.
    foreach ($variables['sources'] as $i => $source) {
      $variables['sources'][$i]['data-srcset'] = $source['srcset'];
      unset($variables['sources'][$i]['srcset']);
    }
  }
}

/**
 * Implements hook_help().
 *
 * @inheritdoc
 */
function lazyload_images_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the  better_status_messages module.
    case 'help.page.lazyload_images':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Lazyload images using an IntersectionObserver.') . '</p>';
      return $output;

    default:
  }
}
