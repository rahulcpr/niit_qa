{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - paragraph.getCreatedTime() will return the paragraph creation timestamp.
 *   - paragraph.id(): The paragraph ID.
 *   - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
 *   - paragraph.getOwnerId(): The user ID of the paragraph author.
 *   See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
 *   and methods for the paragraph object.
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}
{% set classes = [
    'paragraph',
    'paragraph--type--' ~ paragraph.bundle|clean_class,
    view_mode ? 'paragraph--view-mode--' ~ view_mode|clean_class,
    not paragraph.isPublished() ? 'paragraph--unpublished'
] %}
{% block paragraph %}
    <div{{ attributes.removeClass(classes) }}>
        {% block content %}
            {% set field_no_of_companies=content.field_no_of_companies[0]['#context']['value'] %}
            {% set field_disclaimer=content.field_disclaimer[0]['#context']['value'] %}
            {% set field_no_of_students=content.field_no_of_students[0]['#context']['value'] %}
            {% set field_placement_header_label=content.field_placement_header_label[0]['#context']['value'] %}
            {% set field_placement_companies=content.field_placement_companies %}
			<div class="sliderinner-wrap">
            <div class="container">
                <div class="headding text-center">
                    <h2>{{ field_placement_header_label }}</h2>
                   <!-- <div class="recruit">Around
                        <strong>{{ field_no_of_companies }} companies</strong>
                        recruit around <span
                            class="field-counter-value">{{ field_no_of_students }}</span>
                        students.
                    </div>-->
					<div class="recruit">
					<span>{{ drupal_view('counter_value', 'block_1') }}</span>
					NIITians making
					waves in
					the
					industry.
					</div>
					<span class="underline"></span>
                   
                </div>
				
				

                <div class="placement-container">
                    <div class="placementcom">
                        {{ field_placement_companies }}
                    </div>
                </div>
                <div class="text-center disclaimer">
                    Disclaimer: {{ field_disclaimer }}</div>
            </div>
			</div>
        {% endblock %}
    </div>
{% endblock paragraph %}
